'''Python序列'''
'''列表推导式'''
#1.实现嵌套列表的平铺
vec = [[1,2,3], [4,5,6], [7,8,9]]
print([num for elem in vec for num in elem] )
#相当于
vec = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
result = []
for elem in vec:
    for num in elem:
        result.append(num)
print(result)
#2.实现矩阵转置
matrix = [ [1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12]]
print([[row[i] for row in matrix] for i in range(4)] )
#也可使用内置函数实现矩阵转置
print(list(zip(*matrix)))                 #序列解包
#3.列表推导式生成100以内的所有素数
#[p for p in range(2, 100) if 0 not in p%d for d in range(2, int(p**0.5)+1)]
#实现向量运算
import random
x = [random.randint(1,10) for i in range(10)]   #随机数范围1-10
y = [random.randint(1,10) for i in range(10)]
import operator
sum(map(operator.mul, x, y))             #向量内积
sum((i*j for i, j in zip(x, y)))         #向量内积
print(list(map(operator.add, x, y)))        #两个等长的向量对应元素相加
#元组和列表类似，但属于不可变序列，元组一旦创建，用任何方法都不可以修改其元素。
# 使用tuple函数将其他序列转换为元组
print(tuple('abcdefg'))                      #把字符串转换为元组
'''序列解包'''
#可以使用序列解包功能对多个变量同时赋值
x, y, z = 1, 2, 3                      #多个变量同时赋值
a=1
b=2
a, b = b, a                            #交换两个变量的值
print(x,y,z)
#序列解包遍历多个序列
keys = ['a', 'b', 'c', 'd']
values = [1, 2, 3, 4]
for k, v in zip(keys, values):
    print((k, v), end=' ')
#使用序列解包遍历enumerate对象
x = ['a', 'b', 'c']
for i, v in enumerate(x):
    print('The value on position {0} is {1}'.format(i,v))
#其他用法的序列解包
print(*range(4),4)
print({'x': 1, **{'y': 2}})
#生成器推导式
# 不管用哪种方法访问生成器对象，都无法再次访问已访问过的元素。
# 使用生成器对象__next__()方法或内置函数next()进行遍历
g = ((i+2)**2 for i in range(10))      #创建生成器对象
print(g.__next__())              #使用生成器对象的__next__()方法获取元素
print(next(g))                   #使用函数next()获取生成器对象中的元素
# 使用for循环直接迭代生成器对象中的元素
g = ((i+2)**2 for i in range(10))
for item in g:            #使用循环直接遍历生成器对象中的元素
    print(item, end=' ')
